{
    "swagger": "2.0",
    "info": {
        "title": "COACH IPSUM",
        "version": "1.0.0"
    },
    "securityDefinitions":{
     "Bearer":{
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
    }
    },
    "basePath": "/api/v1",
    "paths": {
        "/autors": {
            "get": {
                "tags": [
                    "Autor"
                ],
                "summary": "Get a listing of the Autors.",
                "description": "Get all Autors",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Autor"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Autor"
                ],
                "summary": "Store a newly created Autor in storage",
                "description": "Store Autor",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Autor that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Autor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Autor"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/autors/{id}": {
            "get": {
                "tags": [
                    "Autor"
                ],
                "summary": "Display the specified Autor",
                "description": "Get Autor",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Autor",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Autor"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Autor"
                ],
                "summary": "Update the specified Autor in storage",
                "description": "Update Autor",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Autor",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Autor that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Autor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Autor"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Autor"
                ],
                "summary": "Remove the specified Autor from storage",
                "description": "Delete Autor",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Autor",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/textos": {
            "get": {
                "tags": [
                    "Texto"
                ],
                "summary": "Lista dos textos deste autor.",
                "description": "Get all Textos",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Texto"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Texto"
                ],
                "summary": "Store a newly created Texto in storage",
                "description": "Store Texto",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Texto that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Texto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Texto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },

        "/textos/{id}": {
            "get": {
                "tags": [
                      "Texto"
                ],
                "summary": "TESTE",
                "description": "Get Texto",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Texto",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Texto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Texto"
                ],
                "summary": "Update the specified Texto in storage",
                "description": "Update Texto",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Texto",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Texto that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Texto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Texto"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Texto"
                ],
                "summary": "Remove the specified Texto from storage",
                "description": "Delete Texto",
                "produces": [
                    "application/json"
                ],
                "security":{
                    "Bearer": []
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Texto",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "OAuth": {
            "required": [
                ""
            ],
            "properties": {
                "NEW TOKEN": {
                    "type": "POST /oauth/token",
                    "description": "grant_type=password client_id=[id] client_secret=[secret] username=[email] password=[senha]"

                },
                "REFRESH TOKEN": {
                    "type": "POST /oauth/token",
                    "description": "grant_type=refresh_token client_id=[id] client_secret=[secret] refresh_token=[secret]"
                }
            }
        },
        "Autor": {
            "required": [
                ""
            ],
            "properties": {
                "idautor": {
                    "description": "idautor",
                    "type": "integer",
                    "format": "int32"
                },
                "nome": {
                    "description": "nome",
                    "type": "string"
                },
                "limite": {
                    "description": "limite",
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "description": "url",
                    "type": "string"
                },
                "titulo": {
                    "description": "titulo",
                    "type": "string"
                }
            }
        },
        "Texto": {
            "required": [
                ""
            ],
            "properties": {
                "idtexto": {
                    "description": "idtexto",
                    "type": "integer",
                    "format": "int32"
                },
                "texto": {
                    "description": "texto",
                    "type": "string"
                },
                "idautor": {
                    "description": "idautor",
                    "type": "integer",
                    "format": "int32"
                },
                "pagina": {
                    "description": "pagina",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}
